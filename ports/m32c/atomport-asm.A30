;/*
; * Copyright (c) 2014, Juan Angel Hernandez Hdez. for Atomthreads Project.
; * All rights reserved.
; *
; * Redistribution and use in source and binary forms, with or without
; * modification, are permitted provided that the following conditions
; * are met:
; *
; * 1. Redistributions of source code must retain the above copyright
; *    notice, this list of conditions and the following disclaimer.
; * 2. Redistributions in binary form must reproduce the above copyright
; *    notice, this list of conditions and the following disclaimer in the
; *    documentation and/or other materials provided with the distribution.
; * 3. No personal names or organizations' names associated with the
; *    Atomthreads project may be used to endorse or promote products
; *    derived from this software without specific prior written permission.
; *
; * THIS SOFTWARE IS PROVIDED BY THE ATOMTHREADS PROJECT AND CONTRIBUTORS
; * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
; * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
; * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE
; * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; * POSSIBILITY OF SUCH DAMAGE.
; */


;/**
; *  \b _timer_b2
; *
; *  Timer B2 1ms interrupt. 
; *  On interrupt, the U flag is cleared meaning that the interrupt stack (IStack)
; *  is selected. FLG and PC are saved on IStack, this routine then cuts and pastes 
; *  FLG and PC from IStack to UStack (User stack) so that all data relevant to a 
; *  thread is kept on the same stack area. This also makes the IStack available to 
; *  use for interrupt nesting.
; *
; *  @return None
; */

    .GLB _atomIntEnter
    .GLB _atomTimerTick
    .GLB $atomIntExit
    .GLB __timer_b2
    .FB    0    

    .SECTION    program,CODE,ALIGN
    .align
    .GLB __timer_b2
    .rvector        23, __timer_b2
__timer_b2:
    PUSHC FB      ;Save FB temporary on I stack.
    FSET U        ;Select user stack
    PUSHC ISP     ;Save ISP in U stack
    POPC  FB      ;POP ISP to FB
    PUSH.W 8H[FB]  ;Copy FLG from Istack to Ustack
    PUSH.L 4H[FB]  ;Copy TskX ReturnAddress from Istack to Ustack
    FCLR U        ;Select Istack
    POPC FB       ;restore original value of FB
    ADD.L #6,SP   ;Clean Istack, so it is free for interrupts.
    FSET U        ;Carry on, on Ustack
    
    JSR.A _atomIntEnter
    JSR.A _atomTimerTick
    
    MOV.B:Q     #1H,R0L ;Pass the TRUE parameter
    JSR.A $atomIntExit
    REIT
.END
