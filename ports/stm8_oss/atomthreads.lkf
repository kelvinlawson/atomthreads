# Segment configuration
#<BEGIN SEGMENT_CONF>
# Segment Code,Constants:
+seg .const -b 0x8080 -m 0x7f80 -n .const -it
+seg .text -a .const -n .text
# Segment Eeprom:
+seg .eeprom -b 0x4000 -m 0x400 -n .eeprom
# Segment Zero Page (this deliberately avoids 0x0 to avoid
# NULL pointers to real data):
+seg .bsct -b 0x2 -m 0xfe -n .bsct
+seg .ubsct -a .bsct -n .ubsct
+seg .bit -a .ubsct -n .bit -id
+seg .share -a .bit -n .share -is
# Segment Ram (allow up to RAMTOP-64 to be used for data
# sections, leaving 64 bytes for the startup stack):
+seg .data -b 0x100 -m 0x6c0 -n .data
+seg .bss -a .data -n .bss
#<END SEGMENT_CONF>


# Startup file
#<BEGIN STARTUP_FILE>
crtsi0.sm8
#<END STARTUP_FILE>


# Object files list - section reserved for STVD
#<BEGIN OBJECT_FILES>
build-cosmic\atomkernel.o
build-cosmic\atommutex.o
build-cosmic\atomqueue.o
build-cosmic\atomsem.o
build-cosmic\atomtimer.o
build-cosmic\uart.o
# Caller passes in test application object name as param1
# must be before tests-main.o
@1
build-cosmic\tests-main.o
build-cosmic\atomport.o
build-cosmic\atomport-asm-cosmic.o
#<END OBJECT_FILES>


# Library list
#<BEGIN LIBRARY_FILES>
libis0.sm8
#libisl0.sm8
libm0.sm8
#<END LIBRARY_FILES>


# Interrupt vectors file
#<BEGIN VECTOR_FILE>
+seg .const -b 0x8000 -k
build-cosmic\stm8_interrupt_vector.o
#<END VECTOR_FILE>

# Defines
#<BEGIN DEFINED_VARIABLES>
+def __endzp=@.ubsct			# end of uninitialized zpage
+def __memory=@.bss				# end of bss segment
+def __startmem=@.bss
+def __endmem=0x7bf
#+def __endmem=0x5ff
+def __stack=0x7ff
#<END DEFINED_VARIABLES>
